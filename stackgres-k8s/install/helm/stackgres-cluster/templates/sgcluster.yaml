{{ if and (eq .Values.kind "SGCluster") .Values.cluster.create }}
apiVersion: stackgres.io/v1
kind: SGCluster
metadata:
  name: {{ .Release.Name }}
  {{- if .Values.cluster.version }}
  annotations:
    stackgres.io/operatorVersion: "{{ .Values.cluster.version }}"
  {{- end }}
spec:
  instances: {{ .Values.cluster.instances }}
  postgres:
    {{- toYaml .Values.cluster.postgres | nindent 4 }}
  {{- with .Values.cluster.autoscaling }}
  autoscaling:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.cluster.replication }}
  replication:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.cluster.replicateFrom }}
  replicateFrom:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  configurations: 
    sgPostgresConfig: {{ quote .Values.cluster.configurations.sgPostgresConfig }}
    sgPoolingConfig: {{ quote .Values.cluster.configurations.sgPoolingConfig }}
    {{- with .Values.cluster.configurations.observability }}
    observability:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- if not .Values.cluster.disableBackups }}
    {{- with .Values.cluster.configurations.backups }}
    {{- if .sgObjectStorage }}
    backups:
    - {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- with .Values.cluster.configurations.patroni }}
    patroni:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- if .Values.credentials }}
    credentials:
      {{- with .Values.credentials.patroni }}
      patroni:
        {{- with .restApiPassword }}
        restApiPassword:
          name: {{ $.Release.Name }}-users
          key: restapi-password
        {{- end }}
      {{- end }}
      {{- with .Values.credentials.users }}
      users:
        {{- with .superuser }}
        superuser:
          {{- with .username }}
          username:
            name: {{ $.Release.Name }}-users
            key: superuser-username
          {{- end }}
          {{- with .password }}
          password:
            name: {{ $.Release.Name }}-users
            key: superuser-password
          {{- end }}
        {{- end }}
        {{- with .replication }}
        replication:
          {{- with .username }}
          username:
            name: {{ $.Release.Name }}-users
            key: replication-username
          {{- end }}
          {{- with .password }}
          password:
            name: {{ $.Release.Name }}-users
            key: replication-password
          {{- end }}
        {{- end }}
        {{- with .authenticator }}
        authenticator:
          {{- with .username }}
          username:
            name: {{ $.Release.Name }}-users
            key: authenticator-username
          {{- end }}
          {{- with .password }}
          password:
            name: {{ $.Release.Name }}-users
            key: authenticator-password
          {{- end }}
        {{- end }}
      {{- end }}
    {{- else }}
    {{- with .Values.cluster.configurations.credentials }}
    credentials:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
  sgInstanceProfile: {{ quote .Values.cluster.sgInstanceProfile }}
  {{- with .Values.cluster.initialData }}
  initialData:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.cluster.managedSql }}
  managedSql:
  {{- with .continueOnSGScriptError }}
    continueOnSGScriptError: {{ . }}
  {{- end }}
  {{- if .scripts }}
    scripts:
    - sgScript: {{ $.Release.Name }}-scripts
  {{- end }}
  {{- end }}
  {{- with .Values.cluster.postgresServices }}
  postgresServices:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.cluster.metadata }}
  metadata:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  pods:
    persistentVolume:
      size: {{ quote .Values.cluster.pods.persistentVolume.size }}
      {{- with .Values.cluster.pods.persistentVolume.storageClass }}
      {{- if eq "-" . }}
      storageClass: ""
      {{- else }}
      storageClass: {{ . }}
      {{- end }}
      {{- end }}
    {{- with .Values.cluster.pods.disableConnectionPooling }}
    disableConnectionPooling: {{ . }}
    {{- end }}
    {{- with .Values.cluster.pods.disablePostgresUtil }}
    disablePostgresUtil: {{ . }}
    {{- end }}
    {{- with .Values.cluster.pods.disableEnvoy }}
    disableEnvoy: {{ . }}
    {{- end }}
    {{- with .Values.cluster.pods.scheduling }}
    scheduling:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.cluster.pods.managementPolicy }}
    managementPolicy: {{ . }}
    {{- end }}
    {{- with .Values.cluster.pods.customVolumes }}
    customVolumes:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.cluster.pods.customContainers }}
    customContainers:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.cluster.pods.customInitContainers }}
    customInitContainers:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.cluster.pods.customVolumeMounts }}
    customVolumeMounts:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  {{- if .Values.distributedLogs.enabled }}
  {{- with .Values.cluster.distributedLogs }}
  distributedLogs:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- with .Values.cluster.prometheusAutobind }}
  prometheusAutobind: {{ . }}
  {{- end }}
  {{- with .Values.nonProductionOptions }}
  nonProductionOptions:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
